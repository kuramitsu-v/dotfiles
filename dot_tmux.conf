# マウスでウィンドウ・ペインの切り替えやリサイズを可能にする
set -g mouse on

bind -T edit-mode-vi WheelUpPane send-keys -X scroll-up
bind -T edit-mode-vi WheelDownPane send-keys -X scroll-down

# スクロール可能な行数を10,000行にする
set -g history-limit 10000

# status line を更新する間隔を 1 秒にする
# set -g status-interval 1

#--------------------------------------------------------------
# style
#--------------------------------------------------------------

# True color化対応
set -g default-terminal "screen-256color"
# set -g default-terminal "tmux-256color" # tmux-256colorではMacOSでは表示崩れがあったため
set -ag terminal-overrides ",alacritty:RGB"

# ステータスバーの背景色を変更する
set -g status-bg "#000000"

# status line の文字色を指定する
set -g status-fg "#FFFFFF"

# window-status を中央揃えで配置する
set -g status-justify "centre"

# ステータスバーをトップに配置する
set -g status-position top

# status-left・status-rightを非表示にする
set -g status-left ""
set -g status-right ""

# ペインの開始番号を 0 から 1 に変更する
set -g base-index 1

# window名の背景色・文字色を指定
set -g window-status-format '#[bg=#808080] #I #{b:pane_current_path} '
set -g window-status-current-format '#[bg=#ffff00]#[fg=#000000]#{?client_prefix,#[bg=#00ff00],}#{?pane_synchronized,#[bg=#00FFBF],} #I #{b:pane_current_path}#{?window_zoomed_flag,Z,} '

# windowの背景色を指定
set -g window-style 'fg=#9e9e9e,bg=#303030'
set -g window-active-style 'fg=#bcbcbc,bg=#000000'

# copy-modeの検索のスタイルを指定
set -g mode-style "fg=#000000,bg=#ffff00"
set -g copy-mode-match-style "fg=#000000,bg=#ffff00"
set -g copy-mode-current-match-style "fg=#ffff00,bg=#ff0000"

# ペインのステータスラインのスタイルを指定
set -g pane-border-status bottom
set -g pane-border-format "#[fg=#000000,bg=#ffff00]#{?pane_active,#[bg=#ff0000],} #S:#I.#P #{b:pane_current_path} (#{pane_tty}) "

#--------------------------------------------------------------
# key-binding
#--------------------------------------------------------------

# コピーモードのキー操作をviライクにする
set-window-option -g mode-keys vi

# 選択開始キーの設定
bind -T copy-mode-vi v send-keys -X begin-selection

# 矩形(くけい)選択のON/OFF
bind -T copy-mode-vi C-v send-keys -X rectangle-toggle

# 選択範囲のコピー(コピーモード抜けない)
bind -T copy-mode-vi Enter send-keys -X copy-pipe

# mark部分にjump
bind -T copy-mode-vi x send-keys -X jump-to-mark

# コピーモード時に ? でsearch-backward
bind -T copy-mode-vi "?" command-prompt -T search -p "(search up)" { send-keys -X search-backward "%%" }

# コピーモード→検索を1コマンドに設定
bind c-[ copy-mode \
  "\;" command-prompt -T search -p "(search up)" { send-keys -X search-backward "%%" }
# bind c-u run-shell "if [ copy-mode = $(tmux display -p -F "{pane_mode}") ] ; then tmux send-keys -X halfpage-up ; else tmux copy-mode && send-keys -X halfpage-up ; fi"

# 現在のディレクトリで水平/垂直分割
bind '"' split-window -c '#{pane_current_path}'
bind '%' split-window -h -c '#{pane_current_path}'

# ウィンドウの入れ替え
bind C-x swap-window -t -1 "\;" previous-window
bind C-y swap-window -t +1 "\;" next-window

# ペインの上下左右・前後移動
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R
bind C-i select-pane -t :.-
bind C-] select-pane -t :.+

# ペインの幅を上下左右に広げる
bind C-h resize-pane -L 1
bind C-j resize-pane -D 1
bind C-k resize-pane -U 1
bind C-l resize-pane -R 1

# synchronize-panesのON/OFF、sync時1
bind e run-shell '\
  if [ 0 = $(tmux display -p -F "#{pane_synchronized}") ] ; then \
    tmux set synchronize-panes on ; \
  else \
    tmux set synchronize-panes off ; \
  fi\
'

# 設定ファイルのリロード
bind r source-file ~/.tmux.conf "\;" display "Reloaded!"

# popup windowを起動/デタッチ、-E:exit時に自動で閉じる
bind C-p popup -xC -yC -w95% -h95% -E -d '#{pane_current_path}' '\
  if [ popup = $(tmux display -p -F "#{session_name}") ]; then \
    tmux detach-client ; \
  else \
    # {while ~ done ; echo}でwhile内の変数参照、グルーピング{}の最後にも ; }必要
    # ディレクトリが一致するwindowを取得、例)popup:3.0
    window=$(tmux lsp -s -t popup | { while read pane; do [ $(tmux display -p -F "#{pane_current_path}") = $(tmux display -t popup:${pane%:*} -p -F "#{pane_current_path}") ] && pd=${pane%:*} ; done ; echo "popup:${pd}" ; } ) ; \
    # -c:new-window時のディレクトリを指定
    tmux attach -c $(tmux display -p -F "#{pane_current_path}") -t $window || tmux new -s popup ; \
  fi \
'

# popup windowを起動/デタッチ [-E:exit時に自動で閉じる]
bind C-g popup -xC -y "#{popup_pane_bottom}" -w95% -h40% -E \
  'window=$(tmux display -p -F "#S:#I.#P") && \
  export FZF_DEFAULT_OPTS="-m --layout=reverse --border" && \
  # [-b:buffer name][-d:delete buffer][-r:LFを自動で置換しない][-p:paste時にコマンドを自動で実行しない][-t:target pane]
  navi --print | tr -d "\n" | tmux load-buffer -b tmp - && tmux paste-buffer -drp -t $window -b tmp'
#--------------------------------------------------------------
# plugin
#--------------------------------------------------------------

# plugin追加したら、prefix + Iでロードする
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-yank'

# tmux-resurrect/tmux-continuum
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
## tmux起動時にtmux-continuumで最後に保存された環境で復元する（デフォルトでは15分毎に自動保存）
set -g @continuum-restore 'on'

# tmux-easy-motion
set -g @plugin 'IngoMeyer441/tmux-easy-motion'
## mode切替に切り替えるキーバインド(prefix + value)
set -g @easy-motion-prefix "J"
set -g @easy-motion-target-keys "67890"
## https://github.com/IngoMeyer441/tmux-easy-motion/blob/master/easy_motion.tmux
## mode切替→easy-motion jump line(k)を1コマンドに設定
bind O switch-client -T easy-motion \
  "\;" run-shell -b "~/.tmux/plugins/tmux-easy-motion/scripts/easy_motion.sh '893' '#{session_id}' '#{window_id}' '#{pane_id}' 'k'"
## mode切替→easy-motion jump char(f)を1コマンドに設定
bind P switch-client -T easy-motion \
  "\;" command-prompt -1 -p "character:" {
      set -g @tmp-easy-motion-argument "%%%"
      run-shell -b "~/.tmux/plugins/tmux-easy-motion/scripts/easy_motion.sh '893' '#{session_id}' '#{window_id}' '#{pane_id}' 'bd-f' '#{q:@tmp-easy-motion-argument}'"
  }

# tmux-copy-toolkit
set -g @plugin 'CrispyConductor/tmux-copy-toolkit'
## デフォルトキーバインド設定をOFF
set -g @copytk-no-default-binds on
set -g @copytk-copy-command "CLIPBOARD_SILENT=1 cb"
set -g @copytk-label-chars "67890"
## https://github.com/CrispyConductor/tmux-copy-toolkit/blob/main/copytk.tmux
## easymotion-searchでpositionがずれてしまうためOFFに
## bind P run-shell -b "python3 ~/.tmux/plugins/tmux-copy-toolkit/copytk.py easymotion-search --search-nkeys 1"
bind Q run-shell -b "python3 ~/.tmux/plugins/tmux-copy-toolkit/copytk.py easycopy --search-nkeys 1"
bind R run-shell -b "python3 ~/.tmux/plugins/tmux-copy-toolkit/copytk.py quickopen"

# set -g @plugin 'tmux-plugins/tmux-copycat'
# set -g @plugin 'fcsonline/tmux-thumbs'
# run-shell ~/.tmux/plugins/tmux-thumbs/tmux-thumbs.tmux

# Tmux plugin managerを初期化する
run '~/.tmux/plugins/tpm/tpm'
