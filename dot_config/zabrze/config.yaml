abbrevs:
  - name: ase
    abbr: ase
    snippet: atuin search -i

  - name: as
    abbr: as
    snippet: atuin stats

  - name: c.
    abbr: c.
    snippet: code .

  - name: ch
    abbr: ch
    snippet: chezmoi

  - name: chad
    abbr: chad
    snippet: chezmoi add --template

  - name: chap
    abbr: chap
    snippet: chezmoi apply --interactive

  - name: chas
    abbr: chas
    snippet: chezmoi apply --source-path

  - name: chcd
    abbr: chcd
    snippet: () { local file ; file=$(chezmoi list -p absolute -i files | fzf) ; [ -n "$file" ] && vim $file }

  - name: chch
    abbr: chch
    snippet: chezmoi chattr +template

  - name: chcs
    abbr: chcs
    snippet: () { local file ; file=$(chezmoi list -p source-absolute -i files | fzf) ; [ -n "$file" ] && vim $file }

  - name: chd
    abbr: chd
    snippet: chezmoi data

  - name: chdi
    abbr: chdi
    snippet: () { local file ; file=$(chezmoi list -p absolute -i files | fzf) ; [ -n "$file" ] && chezmoi diff $file }

  - name: chig
    abbr: chig
    snippet: chezmoi ignored

  - name: che
    abbr: che
    snippet: chezmoi edit --interactive --apply

  - name: chl
    abbr: chl
    snippet: chezmoi list -p source-absolute -i files

  - name: cz
    abbr: cz
    snippet: czg

  - name: d
    abbr: d
    snippet: docker

  - name: dc
    abbr: dc
    snippet: docker-compose

  - name: e
    abbr: e
    snippet: echo

  - name: es
    abbr: es
    snippet: exec $SHELL -l

  - name: g
    abbr: g
    snippet: git

  - name: ga
    abbr: ga
    snippet: git add

  - name: ga.
    abbr: ga.
    snippet: git add .

  - name: gap
    abbr: gap
    snippet: git add -p

  - name: gb
    abbr: gb
    snippet: git branch

  - name: gbi
    abbr: gbi
    snippet: git bisect

  - name: gbv
    abbr: gbv
    snippet: git branch --format='%(HEAD) %(refname:short) %09 %(committername) %09 %(committerdate:format:%Y/%m/%d %H:%M) %09 %(objectname:short)' | column -ts $'\t'

  - name: gbvv
    abbr: gbvv
    snippet: git branch -vv

  - name: gc
    abbr: gc
    snippet: git checkout

  - name: gca
    abbr: gca
    snippet: git commit --amend

  - name: gcb
    abbr: gcb
    snippet: git checkout -b

  - name: gch
    abbr: gch
    snippet: git checkout

  - name: gchm
    abbr: gchm
    snippet: git checkout master

  - name: gchs
    abbr: gchs
    snippet: git checkout staging

  - name: gco
    abbr: gco
    snippet: git commit

  - name: (gcof|gcfh)
    abbr-pattern: (gcof|gcfh)
    snippet: git commit --fixup HEAD

  - name: gcr|gchr
    abbr-pattern: (gcr|gchr)
    snippet: git cherry-pick -n

  - name: gd
    abbr: gd
    snippet: git diff

  - name: gf
    abbr: gf
    snippet: git fetch -p --tags

  - name: gfu
    abbr: gfu
    snippet: git fetch -p --tags upstream

  - name: ghs
    abbr: ghs
    snippet: gh status

  - name: ghp
    abbr: ghp
    snippet: gh-poi

  - name: gl
    abbr: gl
    snippet: git log --pretty=format:"%C(auto)%h (%C(blue)%cd%C(auto))%d %s %Cblue[%cn]" --date=format:"%Y/%m/%d %H:%M:%S" -n 10

  - name: gll
    abbr: gll
    snippet: git log --pretty=format:"%C(auto)%h (%C(blue)%cd%C(auto))%d %s %Cblue[%cn]" --date=format:"%Y/%m/%d %H:%M:%S" -n 20

  - name: glll
    abbr: glll
    snippet: git log --pretty=format:"%C(auto)%h (%C(blue)%cd%C(auto))%d %s %Cblue[%cn]" --date=format:"%Y/%m/%d %H:%M:%S" -n 30

  - name: glg
    abbr: glg
    snippet: git log --date-order --graph --pretty=format:"%C(auto)%>|(60)%h (%C(blue)%cd%C(auto)) %<(15,trunc)%cN%d %s" --date=format:"%Y/%m/%d %H:%M:%S"

  - name: glp
    abbr: glp
    snippet: git log --pretty=format:"%C(auto)%h (%C(blue)%cd%C(auto))%d %s %Cblue[%cn]" --date=format:"%Y/%m/%d %H:%M:%S" --first-parent -n 10

  - name: gm
    abbr: gm
    snippet: git merge --no-ff

  - name: gma
    abbr: gma
    snippet: git merge --abort

  - name: gmo
    abbr: gmo
    snippet: git merge --no-ff origin/

  - name: gp
    abbr: gp
    snippet: git pull --no-commit

  - name: gpoh
    abbr: gpoh
    snippet: git push origin HEAD

  - name: gpom
    abbr: gpom
    snippet: git pull origin master --no-commit

  - name: gpos
    abbr: gpos
    snippet: git push origin staging

  - name: gpum
    abbr: gpum
    snippet: git pull upstream master --no-commit

  - name: gr
    abbr: gr
    snippet: git rebase --autostash

  - name: gra
    abbr: gra
    snippet: git rebase --abort

  - name: grc
    abbr: grc
    snippet: git rebase --continue

  - name: greom
    abbr: greom
    snippet: git reset --hard origin/master

  - name: greos
    abbr: greos
    snippet: git reset --hard origin/staging

  - name: grom
    abbr: grom
    snippet: git rebase --autostash origin/master

  - name: gs
    abbr: gs
    snippet: git status

  - name: (gsa|gtl)
    abbr-pattern: (gsa|gtl)
    snippet: gita ll

  - name: gsh
    abbr: gsh
    snippet: git show

  - name: gshh
    abbr: gshh
    snippet: git show HEAD~1

  - name: gshhh
    abbr: gshhh
    snippet: git show HEAD~2

  - name: gtr
    abbr: gtr
    snippet: git tag -l '*release*' --sort=-creatordate --format='%(if) %(*objectname) %(then) %(*objectname:short) %(else) %(objectname:short) %(end) %09 %(objecttype) %09 %(refname:short) %09 %(creatordate:format:%Y/%m/%d %H:%M) %09 %(objectname:short)' | head -n 5 | column -ts $'\t'

  - name: gts
    abbr: gts
    snippet: git tag -l '*staging*' --sort=-creatordate --format='%(if) %(*objectname) %(then) %(*objectname:short) %(else) %(objectname:short) %(end) %09 %(objecttype) %09 %(refname:short) %09 %(creatordate:format:%Y/%m/%d %H:%M) %09 %(objectname:short)' | head -n 5 | column -ts $'\t'

  - name: gu
    abbr: gu
    snippet: gitui

  - name: fgb
    abbr: fgb
    snippet: git for-each-ref --format='%(refname:short) %09 %(committername) %09 %(committerdate:format:%Y/%m/%d %H:%M) %09 %(objectname:short)' --sort=-committerdate | column -ts $'\t' | fzf | awk '{ print $1 }' | tr -d '\n' | cb

  - name: fgc
    abbr: fgc
    snippet: git branch --format='%(refname:short) %09 %(committername) %09 %(committerdate:format:%Y/%m/%d %H:%M) %09 %(objectname:short)' | column -ts $'\t' | fzf | awk '{ print $1 }' | xargs -I % git checkout %

  - name: fgh
    abbr: fgh
    snippet: () { local commits commit ; commits=$(git log --oneline) && commit=$(echo "$commits" | fzf --preview "git show {1} | delta --no-gitconfig") && $(echo -n "$commit" | awk '{printf $1}' | cb) }

  - name: fghd
    abbr: fghd
    snippet: () { local commits commit1 commit2 ; commits=$(git log --oneline) && commit1=$(echo "$commits" | fzf | awk '{printf $1}') && commit2=$(echo "$commits" | fzf --preview "git diff "$commit1...{1}" | delta --no-gitconfig" | awk '{printf $1}') && git diff "$commit1...$commit2" | delta && $(echo -n "$commit1...$commit2" | cb) }

  - name: fghd
    abbr: fghd
    snippet: () { local commits commit1 commit2 ; commits=$(git log --oneline) && commit1=$(echo "$commits" | fzf | awk '{printf $1}') && commit2=$(echo "$commits" | fzf --preview "git diff "$commit1...{1}" | delta --no-gitconfig" | awk '{printf $1}') && git diff "$commit1...$commit2" | delta && $(echo -n "$commit1...$commit2" | cb) }

  - name: m
    abbr: m
    snippet: make

  - name: mh
    abbr: mh
    snippet: make help

  - name: ml
    abbr: ml
    snippet: make lint

  - name: mlo
    abbr: mlo
    snippet: make local

  - name: mf
    abbr: mf
    snippet: make freshup-local-for-py-engineer

  - name: mu
    abbr: mu
    snippet: make unittest

  # - name: np
  #   abbr: np
  #   snippet: () { local COMMAND=$(navi --print) && echo "実行しますか? : $COMMAND" && read && eval "$COMMAND" }

  - name: nr
    abbr: nr
    snippet: npm run

  - name: nrb
    abbr: nrb
    snippet: npm run build

  - name: nrd
    abbr: nrd
    snippet: npm run dev

  - name: nrf
    abbr: nrf
    snippet: npm run fix

  - name: nrl
    abbr: nrl
    snippet: npm run lint

  - name: nrt
    abbr: nrt
    snippet: npm run test

  - name: nrtd
    abbr: nrtd
    snippet: npm run test $(git diff --name-only --line-prefix=$(git rev-parse --show-toplevel)/ origin/master...HEAD | grep -E '.*spec.*')

  - name: nrv
    abbr: nrv
    snippet: npm run vite

  - name: p
    abbr: p
    snippet: "|"
    global: true

  - name: s
    abbr: s
    snippet: sudo

  - name: ug
    abbr: ug
    snippet: ug -QPn

  - name: up
    abbr: up
    snippet: up --noinput

  - name: v
    abbr: v
    snippet: vim

  - name: v.
    abbr: v.
    snippet: vim .

  - name: w
    abbr: w
    snippet: which

  - name: "y"
    abbr: "y"
    snippet: yazi

  - name: zi
    abbr: zi
    snippet: zinit

  - name: zz
    abbr: zz
    snippet: ji

  - name: (delta) --no-gitconfig
    abbr: ng
    snippet: --no-gitconfig
    global: true
    context: '.*delta\s'

  - name: (git) commit
    abbr: co
    snippet: commit
    global: true
    context: '^git\s'

  - name: (git) log
    abbr: l
    snippet: log
    global: true
    context: '^git\s'

  - name: (git add) --dry-run
    abbr: d
    snippet: --dry-run
    global: true
    context: '^git.*add\s'

  - name: (git branch) -vv
    abbr: v
    snippet: -vv
    global: true
    context: '^git.*branch\s'

  - name: (git bisect) bad
    abbr: b
    snippet: bad
    global: true
    context: '^git\sbisect\s'

  - name: (git bisect) good
    abbr: g
    snippet: good
    global: true
    context: '^git\sbisect\s'

  - name: (git bisect) reset
    abbr: r
    snippet: reset
    global: true
    context: '^git\sbisect\s'

  - name: (git commit) -m ""
    abbr: m
    snippet: -m ""
    global: true
    context: '^git.*commit\s'

  - name: (git checkout) master
    abbr: m
    snippet: master
    global: true
    context: '^git\scheckout\s'

  - name: (git checkout) origin
    abbr: o
    snippet: origin/
    global: true
    context: '^git\scheckout\s'

  - name: (git checkout) staging
    abbr: s
    snippet: staging
    global: true
    context: '^git\scheckout\s'

  - name: (git cherry-pick|rebase|merge) --abort
    abbr: a
    snippet: --abort
    global: true
    context: '^git\s(cherry-pick|rebase|merge)\s'

  - name: (git cherry-pick|rebase|merge) --continue
    abbr: c
    snippet: --continue
    global: true
    context: '^git\s(cherry-pick|rebase|merge)\s'

  - name: (git diff|log|show) --name-only
    abbr: "no"
    snippet: --name-only
    global: true
    context: 'git\s(diff|log|show)\s'

  - name: (git diff) --cached
    abbr: ca
    snippet: --cached
    global: true
    context: 'git\sdiff\s'

  - name: (git diff) --staged
    abbr: st
    snippet: --staged
    global: true
    context: 'git\sdiff\s'

  - name: (git log) --all
    abbr: al
    snippet: --all
    global: true
    context: 'git\slog\s'

  - name: (git log) --first-parent
    abbr: (fp|fi)
    snippet: --first-parent
    global: true
    context: 'git\slog\s'

  - name: (git log) --graph
    abbr: gr
    snippet: --graph
    global: true
    context: 'git\slog\s'

  - name: (git log) --no-walk
    abbr: nw
    snippet: --no-walk
    global: true
    context: 'git\slog\s'

  - name: (git log) --oneline
    abbr-pattern: (on|ol)
    snippet: --oneline
    global: true
    context: 'git\slog\s'

  - name: (git log) --reverse
    abbr: r
    snippet: --reverse
    global: true
    context: 'git\slog\s'

  - name: (git log) -n <num>
    abbr-pattern: n\d+$
    snippet: -n ${abbr/n/}
    evaluate: true
    global: true
    context: 'git\slog\s'

  - name: (git merge) --no-commit
    abbr: nc
    snippet: --no-commit
    global: true
    context: 'git\smerge\s'

  # - name: (git push) --force-if-includes
  #   abbr: f
  #   snippet: --force-if-includes
  #   global: true
  #   context: '^git\spush\s'

  - name: (git push) --force-with-lease
    abbr: f
    snippet: --force-with-lease
    global: true
    context: '^git\spush\s'

  - name: (git push) -f
    abbr-pattern: (ff|fo)
    snippet: -f
    global: true
    context: '^git\spush\s'
