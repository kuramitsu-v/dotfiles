#--------------------------------------------------------------
# zsh
#--------------------------------------------------------------

export WORDCHARS="*?_-.[]~&;=!#$%^(){}<>"

# zshプロセスのメモリ上に保存される履歴の件数
HISTSIZE=10000
# ファイルに保存される履歴の件数
SAVEHIST=100000
# 同時に起動したzsh間でヒストリを共有
setopt share_history
# コマンドがリスト内で重複するの場合、古い方を削除
setopt hist_ignore_all_dups
# コマンドが前のイベントと重複する場合はリストに加えない
setopt hist_ignore_dups
# スペースで始まるコマンド行はヒストリから削除
setopt hist_ignore_space
# 余分な空白は詰めて記録
setopt hist_reduce_blanks
# ファイル書出の際、新しいコマンドと寿福する古いコマンドは無視
setopt hist_save_no_dups

zstyle ':completion:*:default' menu select=1

# キーバインドをemacs風にする
bindkey -e
# 逆Tab方向に移動
bindkey '^[^i' reverse-menu-complete
{{ if eq .chezmoi.os "darwin" -}}
# option + ←→で単語毎のカーソル移動
bindkey "3C" forward-word
bindkey "3D" backward-word

# option + shift + ←で単語毎の削除
bindkey "4D" backward-kill-word
# 上がうまくいかなかった時のカスタム関数
# my-backward-kill-word() {
#   zle backward-kill-word &&
#   zle backward-delete-char
# }
# zle -N my-backward-kill-word
# bindkey "4D" my-backward-kill-word
{{- end }}

#--------------------------------------------------------------
# plugin
#--------------------------------------------------------------

### Added by Zinit's installer
if [[ ! -f $HOME/.local/share/zinit/zinit.git/zinit.zsh ]]; then
    print -P "%F{33} %F{220}Installing %F{33}ZDHARMA-CONTINUUM%F{220} Initiative Plugin Manager (%F{33}zdharma-continuum/zinit%F{220})…%f"
    command mkdir -p "$HOME/.local/share/zinit" && command chmod g-rwX "$HOME/.local/share/zinit"
    command git clone https://github.com/zdharma-continuum/zinit "$HOME/.local/share/zinit/zinit.git" && \
        print -P "%F{33} %F{34}Installation successful.%f%b" || \
        print -P "%F{160} The clone has failed.%f%b"
fi

source "$HOME/.local/share/zinit/zinit.git/zinit.zsh"

# Load a few important annexes, without Turbo
# (this is currently required for annexes)
zinit light-mode for \
    zdharma-continuum/zinit-annex-as-monitor \
    zdharma-continuum/zinit-annex-bin-gem-node \
    zdharma-continuum/zinit-annex-patch-dl \
    zdharma-continuum/zinit-annex-rust

### End of Zinit's installer chunk
zinit light-mode for \
    from"gh-r" nocompile sbin src"init.zsh" \
    atclone"./starship init zsh > init.zsh; ./starship completions zsh > _starship" \
    starship/starship

#--------------------------------------------------------------
# terminal
#--------------------------------------------------------------

# launch tmux when start zsh
if [ "$TERM" = "alacritty" ] && command -v tmux &> /dev/null && [ -z "$TMUX" ]; then
  tmux
fi

{{ if eq .chezmoi.os "darwin" -}}
# iTerm2
tab-color() {
  echo -ne "\033]6;1;bg;red;brightness;$1\a"
  echo -ne "\033]6;1;bg;green;brightness;$2\a"
  echo -ne "\033]6;1;bg;blue;brightness;$3\a"
}

tab-reset() {
  echo -ne "\033]6;1;bg;*;default\a"
}

chpwd() {
  if [ "$TERM" = "xterm-256color" ]; then
    case $PWD/ in
      ~) tab-color 0 200 0;;
      *) tab-reset;;
    esac
    echo -ne "\033]0;$(pwd | rev | awk -F \/ '{print "/"$1"/"$2}'| rev)\007"
  fi

  if [ "$TERM" = "screen-256color" ]; then
    case $PWD in
      ~) tmux set-option -w window-status-format '#[bg=#008000] #I #{b:pane_current_path} ' ;;
      *) tmux set-option -w window-status-format '#[bg=#808080] #I #{b:pane_current_path} ' ;;
    esac
  fi
}
{{- end }}

#--------------------------------------------------------------
# function
#--------------------------------------------------------------

#--------------------------------------------------------------
# other
#--------------------------------------------------------------

# .zshrc.lazyを遅延読み込み
zinit wait lucid light-mode as'null' \
    atinit'source "${HOME}/.zshrc.lazy"' \
    for 'zdharma-continuum/null'
